/* 
 * Description     : Api's for Vulnerabilty checking of input and sanitizing XSS styles in the input
*/

// Require dependencies
var sanitizeHTML = require("sanitize-html");
var fastestValidator = require("fastest-validator")
var reqMoment = require("moment");
const v = new fastestValidator();

function __SanitizeHTMLTags(pData, pAllowedTags, pAllowedAttr) {
    try {

        Object.keys(pData).forEach(key => {
            pData[key] = sanitizeHTML(pData[key], {
                allowedTags: pAllowedTags,
                allowedAttributes: pAllowedAttr,
                disallowedTagsMode: "discard", // 'completelyDiscard' || 'recursiveEscape'|| 'escape' || 'discard'});
                textFilter: function (text, tagName) {
                    if (pAllowedTags.indexOf(tagName) > -1) return //Skip tags

                    const regex = /[^.a-zA-Z0-9:-\s]/g
                    let isDateText = text.replace(regex, ''); // To check is date input
                    const date = new Date(isDateText);

                    // Check if the created Date object is valid and if its string representation matches the original string
                    if (!isNaN(date.getTime()) && date.toISOString().slice(0, 10) === isDateText.slice(0, 10))
                        return new Date(isDateText)
                    else {
                        const regex = /[^a-zA-Z0-9\s]/g
                        // Replace special characters with an empty string
                        return text.replace(regex, '');
                    }
                },
            })
            pData[key] = pData[key].trim();
        })
        return pData;

    } catch (ex) {
        return [{ "message": ex.toString() }]
    }
}

function __ValidateInputParam(pData, pSchema) {
    try {
        let check = v.compile(pSchema);
        return check(pData)
    }
    catch (ex) {
        return false
    }
}


module.exports = {
    SanitizeHTMLTags: __SanitizeHTMLTags,
    ValidateInputParam: __ValidateInputParam
}
/*********** End of File ********/